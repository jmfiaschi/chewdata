version: "3.6"

x-minio-common: &minio-common
    image: minio/minio:latest
    command: server --console-address ":9001" http://minio{1...4}/data{1...2}
    expose:
        - "9000"
        - "9001"
    environment:
        MINIO_ROOT_USER: ${BUCKET_ACCESS_KEY_ID}
        MINIO_ROOT_PASSWORD: ${BUCKET_SECRET_ACCESS_KEY}
        MINIO_API_SELECT_PARQUET: "on"
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
        interval: 30s
        timeout: 20s
        retries: 3

services:
    minio1:
        <<: *minio-common
        hostname: minio1
        volumes:
            - ./.cache/minio/data1-1:/data1
            - ./.cache/minio/data1-2:/data2

    minio2:
        <<: *minio-common
        hostname: minio2
        volumes:
            - ./.cache/minio/data2-1:/data1
            - ./.cache/minio/data2-2:/data2

    minio3:
        <<: *minio-common
        hostname: minio3
        volumes:
            - ./.cache/minio/data3-1:/data1
            - ./.cache/minio/data3-2:/data2

    minio4:
        <<: *minio-common
        hostname: minio4
        volumes:
            - ./.cache/minio/data4-1:/data1
            - ./.cache/minio/data4-2:/data2

    nginx:
        image: nginx:latest
        hostname: nginx
        volumes:
            - ./.config/nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
            - "9000:9000"
            - "9001:9001"
        depends_on:
            - minio1
            - minio2
            - minio3
            - minio4

    mc:
        image: minio/mc:latest
        volumes:
            - ./.cache/minio/root:/root
            - ./data:/root/data

    httpbin:
        image: kennethreitz/httpbin:latest
        ports:
            - 8080:80

    mongo:
        image: mongo
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}

    mongo-admin:
        image: mongo-express
        ports:
            - 8081:8081
        depends_on:
            - mongo
        environment:
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}

    psql:
        image: postgres
        restart: always
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${PSQL_USERNAME}
            POSTGRES_PASSWORD: ${PSQL_PASSWORD}
            POSTGRES_DB: ${PSQL_DB}
        volumes:
            - ./.config/psql.sql:/docker-entrypoint-initdb.d/setup.sql

    adminer:
        image: adminer
        restart: always
        depends_on:
            - psql
        ports:
            - 8082:8080

    keycloak:
        image: jboss/keycloak
        restart: always
        environment:
            - KEYCLOAK_LOGLEVEL=DEBUG
            - DB_VENDOR=postgres
            - DB_USER=${PSQL_USERNAME}
            - DB_DATABASE=${PSQL_DB}
            - DB_PASSWORD=${PSQL_PASSWORD}
            - DB_PORT=5432
            - DB_ADDR=psql
            - KEYCLOAK_USER=${KEYCLOAK_USER}
            - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
            - KEYCLOAK_STATISTICS=all
            - KEYCLOAK_IMPORT=/tmp/import/realm-import.json
        depends_on:
            - psql
        ports:
            - "8083:8080"
        volumes:
            - ./.config/realm-import.json:/tmp/import/realm-import.json

    rabbitmq:
        image: rabbitmq:3-management-alpine
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
        ports:
            - 5672:5672
            - 15672:15672

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
    data1-1:
    data1-2:
    data2-1:
    data2-2:
    data3-1:
    data3-2:
    data4-1:
    data4-2: