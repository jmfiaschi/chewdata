services:
    minio:
        image: minio/minio:latest
        volumes:
            - ./.cache/minio/data:/data
        command: server /data --console-address ":9001"
        expose:
            - "9000"
            - "9001"
        environment:
            MINIO_ROOT_USER: ${BUCKET_ACCESS_KEY_ID}
            MINIO_ROOT_PASSWORD: ${BUCKET_SECRET_ACCESS_KEY}
            MINIO_API_SELECT_PARQUET: "on"
        healthcheck:
            test: ["CMD", "mc", "ready", "local"]
            interval: 5s
            timeout: 5s
            retries: 5

    nginx:
        image: nginx:latest
        hostname: nginx
        volumes:
            - ./.config/nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
            - "9000:9000"
            - "9001:9001"
        depends_on:
            - minio

    mc:
        image: minio/mc:latest
        volumes:
            - ./.cache/minio/root:/root
            - ./data:/root/data

    httpbin:
        image: kennethreitz/httpbin:latest
        ports:
            - 8080:80

    mongo:
        image: mongo
        ports:
            - 27017:27017
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}

    mongo-admin:
        image: mongo-express
        ports:
            - 8081:8081
        depends_on:
            - mongo
        environment:
            ME_CONFIG_MONGODB_SERVER: mongo
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USERNAME}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD}

    psql:
        image: postgres
        restart: always
        ports:
            - 5432:5432
        environment:
            POSTGRES_USER: ${PSQL_USERNAME}
            POSTGRES_PASSWORD: ${PSQL_PASSWORD}
            POSTGRES_DB: ${PSQL_DB}
        volumes:
            - ./.config/psql.sql:/docker-entrypoint-initdb.d/setup.sql

    adminer:
        image: adminer
        restart: always
        depends_on:
            - psql
        ports:
            - 8082:8080

    keycloak:
        image: quay.io/keycloak/keycloak
        restart: always
        environment:
            - KC_LOG_LEVEL=DEBUG
            - KC_DB_URL_HOST=psql
            - KC_DB=${PSQL_DB}
            - KC_DB_USERNAME=${PSQL_USERNAME}
            - KC_DB_PASSWORD=${PSQL_PASSWORD}
            - KC_DB_URL=jdbc:postgresql://psql:5432/postgres
            - KC_HOSTNAME=localhost
            - KC_HOSTNAME_PORT=8083
            - KC_HEALTH_ENABLED=true
            - KC_METRICS_ENABLED=true
            - KEYCLOAK_ADMIN=${KEYCLOAK_USER}
            - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD}
            - KEYCLOAK_STATISTICS=all
        depends_on:
            - psql
        ports:
            - "8083:8080"
        volumes:
            - ./.config/realm.json:/opt/keycloak/data/import/realm.json
        command: ["start-dev", "--import-realm"]

    rabbitmq:
        image: rabbitmq:3-management-alpine
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
        ports:
            - 5672:5672
            - 15672:15672

    monitoring:
        image: jaegertracing/all-in-one:latest
        ports:
            - 6831:6831/udp
            - 6832:6832/udp
            - 16686:16686
