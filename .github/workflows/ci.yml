name: CI

on: [push]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: build 
          args: --all-targets --all-features
  # unit-tests:
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true

  #     - name: Rename .env.ci to .env
  #       run: cp .env.ci .env 

  #     - name: load env file
  #       uses: falti/dotenv-action@v0.2.6

  #     - name: Run coverage
  #       run: make coverage-ut

      # - name: Upload coverage to codecov.io
      #   uses: codecov/codecov-action@v2
      #   with:
      #     token: ${{secrets.CODECOV_TOKEN}}
      #     flags: unitary
      #     verbose: true
      #     fail_ci_if_error: true

      # - name: Archive code coverage results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: code-coverage-report
      #     path: cobertura.xml
  integration-tests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Rename .env.ci to .env
        run: cp .env.ci .env 
      - uses: Swatinem/rust-cache@v1
      - run: make coverage-it

      # - name: Upload coverage to codecov.io
      #   uses: codecov/codecov-action@v2
      #   with:
      #     token: ${{secrets.CODECOV_TOKEN}}
      #     flags: integration
      #     verbose: true
      #     fail_ci_if_error: true

      # - name: Archive code coverage results
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: code-coverage-report
      #     path: cobertura.xml
  benchmark:
    needs: ["build"]
    name: Check performance regeression.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Run benchmark
        run: |
          cargo install cargo-criterion
          cargo criterion --output-format bencher | tee output.txt

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: output.txt
          github-token: ${{ secrets.BENCH_TOKEN }}
          auto-push: true
          alert-threshold: '130%'
          comment-on-alert: true
          fail-on-alert: true
          alert-comment-cc-users: '@jmfiaschi'